/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UserInterface;

import RMIConnections.Client;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class AdminManageOrder extends javax.swing.JFrame {

    /**
     * Creates new form AdminPlaceholder
     */
    public AdminManageOrder() {
        initComponents();
        this.setLocationRelativeTo(null);
        // reset fields, udpate table contents, update combo box
        refresh();
        
    }
    
    private void loadTable() {
        try {
            DefaultTableModel model = Client.Object.viewOrderStatus();
            viewOrderTable.setModel(model);
        } catch (Exception ex) {
            Logger.getLogger(AdminCRUDForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void loadComboBox() {
        try {
            receiptIDComboBox.removeAllItems();
            ArrayList<String> receiptIDs = Client.Object.retrieveAllReceiptID();
            for (String receiptID : receiptIDs) {
                receiptIDComboBox.addItem(receiptID);
            }
        } catch (Exception ex) {
            Logger.getLogger(AdminManageOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void refresh() {
        loadTable();
        loadComboBox();
        readyButton.setEnabled(false);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        viewOrderPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        viewOrderTable = new javax.swing.JTable();
        searchReceiptPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        receiptIDComboBox = new javax.swing.JComboBox<>();
        searchButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        updateButtonPanel = new javax.swing.JPanel();
        readyButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Order Information");

        viewOrderPanel.setBackground(new java.awt.Color(255, 255, 255));
        viewOrderPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("View Orders"));

        viewOrderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Receipt No", "Name", "Item", "Price", "Quantity", "Total", "Paid", "Type", "Time", "Status"
            }
        ));
        viewOrderTable.getTableHeader().setReorderingAllowed(false);
        viewOrderTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewOrderTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(viewOrderTable);

        javax.swing.GroupLayout viewOrderPanelLayout = new javax.swing.GroupLayout(viewOrderPanel);
        viewOrderPanel.setLayout(viewOrderPanelLayout);
        viewOrderPanelLayout.setHorizontalGroup(
            viewOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewOrderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        viewOrderPanelLayout.setVerticalGroup(
            viewOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewOrderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        searchReceiptPanel.setBackground(new java.awt.Color(255, 255, 255));
        searchReceiptPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Search Receipt"));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("Receipt ID:");

        receiptIDComboBox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        receiptIDComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Receipt 1", "Receipt 2", "Receipt 3", "Receipt 4", " " }));
        receiptIDComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptIDComboBoxActionPerformed(evt);
            }
        });

        searchButton.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        searchButton.setForeground(new java.awt.Color(51, 51, 51));
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchReceiptPanelLayout = new javax.swing.GroupLayout(searchReceiptPanel);
        searchReceiptPanel.setLayout(searchReceiptPanelLayout);
        searchReceiptPanelLayout.setHorizontalGroup(
            searchReceiptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchReceiptPanelLayout.createSequentialGroup()
                .addGap(0, 27, Short.MAX_VALUE)
                .addGroup(searchReceiptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchReceiptPanelLayout.createSequentialGroup()
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchReceiptPanelLayout.createSequentialGroup()
                        .addGroup(searchReceiptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(receiptIDComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        searchReceiptPanelLayout.setVerticalGroup(
            searchReceiptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchReceiptPanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(receiptIDComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(searchButton)
                .addGap(20, 20, 20))
        );

        refreshButton.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        refreshButton.setForeground(new java.awt.Color(51, 51, 51));
        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        updateButtonPanel.setBackground(new java.awt.Color(255, 255, 255));
        updateButtonPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Order Update"));

        readyButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        readyButton.setText("Ready Order");
        readyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readyButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout updateButtonPanelLayout = new javax.swing.GroupLayout(updateButtonPanel);
        updateButtonPanel.setLayout(updateButtonPanelLayout);
        updateButtonPanelLayout.setHorizontalGroup(
            updateButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateButtonPanelLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(readyButton)
                .addContainerGap(33, Short.MAX_VALUE))
        );
        updateButtonPanelLayout.setVerticalGroup(
            updateButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updateButtonPanelLayout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addComponent(readyButton)
                .addGap(44, 44, 44))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(refreshButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(viewOrderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(130, Short.MAX_VALUE)
                        .addComponent(searchReceiptPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(167, 167, 167)
                        .addComponent(updateButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(250, 250, 250)))
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(refreshButton)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(viewOrderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(searchReceiptPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(updateButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            AdminMainMenuForm form = new AdminMainMenuForm();
            form.setVisible(true);
            this.dispose();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void receiptIDComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptIDComboBoxActionPerformed

    }//GEN-LAST:event_receiptIDComboBoxActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        try {
            // TODO add your handling code here:
            String ReceiptID = receiptIDComboBox.getSelectedItem().toString();
            
            // highlight the corresponding row in the table
            DefaultTableModel tableModel = (DefaultTableModel) viewOrderTable.getModel();
            int rowIndex = -1;
            for (int i = 0; i < tableModel.getRowCount(); i++) {
                String tableReceiptID = tableModel.getValueAt(i, 0).toString();
                if (tableReceiptID.equals(receiptIDComboBox.getSelectedItem())) {
                    rowIndex = i;
                    break;
                }
            }
            if (rowIndex != -1) {
                viewOrderTable.setRowSelectionInterval(rowIndex, rowIndex);
            }
            
        } catch (Exception ex) {
            Logger.getLogger(AdminCRUDForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        // TODO add your handling code here:
        // reset fields, udpate table contents, update combo box
        refresh();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void readyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readyButtonActionPerformed
        // TODO add your handling code here:
 
        // get current selected item from table model
        DefaultTableModel model = (DefaultTableModel) viewOrderTable.getModel();
        int selectedRowIndex = viewOrderTable.getSelectedRow();
        
        if (selectedRowIndex == -1) {
        JOptionPane.showMessageDialog(null, 
                "Cannot update the order that doesn't exist.", "Error", JOptionPane.ERROR_MESSAGE);
        return;    
        }    

        String receiptNo = (String) model.getValueAt(selectedRowIndex, 0);    
        String neworderStatus = "READY";
        
        try {
            if(Client.Object.updateOrder(receiptNo, neworderStatus)){
                JOptionPane.showMessageDialog(null, "Updated Successfully!");
                refresh();
            }else{
               JOptionPane.showMessageDialog(null, "Order can't be updated!");
               
            }
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
            System.out.println(e.getMessage());        
        }
    }//GEN-LAST:event_readyButtonActionPerformed

    private void viewOrderTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewOrderTableMouseClicked
        // TODO add your handling code here:
        // get current selected item from table model
        readyButton.setEnabled(true);
    }//GEN-LAST:event_viewOrderTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminManageOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminManageOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminManageOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminManageOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminManageOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton readyButton;
    private javax.swing.JComboBox<String> receiptIDComboBox;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JPanel searchReceiptPanel;
    private javax.swing.JPanel updateButtonPanel;
    private javax.swing.JPanel viewOrderPanel;
    private javax.swing.JTable viewOrderTable;
    // End of variables declaration//GEN-END:variables
}
